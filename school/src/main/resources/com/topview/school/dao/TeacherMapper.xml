<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.topview.school.dao.TeacherMapper">
	<resultMap id="BaseResultMap" type="com.topview.school.po.Teacher">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Mar 26 
			12:01:24 CST 2015. -->
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="t_sc_class_id" jdbcType="CHAR" property="tScClassId" />
		<result column="t_sc_grade_id" jdbcType="CHAR" property="tScGradeId" />
		<result column="t_sc_school_id" jdbcType="VARCHAR" property="tScSchoolId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="sex" jdbcType="CHAR" property="sex" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="picUrl" jdbcType="VARCHAR" property="picUrl" />
		<result column="lastUpdate" jdbcType="TIMESTAMP" property="lastUpdate" />
		<result column="education" jdbcType="VARCHAR" property="education" />
		<result column="IDCard" jdbcType="VARCHAR" property="idcard" />
		<result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
	</resultMap>
	
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Mar 26 
			12:01:24 CST 2015. -->
		id, t_sc_class_id, t_sc_grade_id, t_sc_school_id,
		name, sex,
		email,
		phone, create_time, password, picUrl, lastUpdate, education, IDCard,
		birthday
	</sql>

	<select id="findLikeByName" parameterType="java.util.Map" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"/>
		from t_sc_teacher
		where 
		name like '%${keyword}%' and t_sc_school_id=#{schoolId}
		order by name asc
		<if test="offset != null">
				limit #{offset},
				#{limit}
		</if>
	</select>
	
	<select id="countFindLike" parameterType="java.util.Map" resultType="int">
		select 
		count(*)
		from t_sc_teacher
		where 
		name like '%${keyword}%' and t_sc_school_id=#{schoolId}
		order by name asc
	</select>
	

	<select id="selectByParameters" resultMap="BaseResultMap">
		select * from t_sc_teacher where 1 = 1
		<if test="map != null">
			<foreach item="item" index="key" collection="map.entrySet()">
				and ${key} =
				#{item}
			</foreach>
		</if>
	</select>


	<select id="findByNameAndPassword" resultMap="BaseResultMap">
		select * from t_sc_teacher where 1 = 1
		<if test="params != null">
			<foreach item="item" index="key" collection="params.entrySet()">
				and ${key} =
				#{item}
			</foreach>
		</if>
	</select>

	<select id="findByAccount" resultMap="BaseResultMap">
		select * from t_sc_teacher
		t where t.phone=#{phone}
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Mar 26 
			12:01:24 CST 2015. -->
		select
		<include refid="Base_Column_List" />
		from t_sc_teacher
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Mar 26 
			12:01:24 CST 2015. -->
		delete from t_sc_teacher
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.topview.school.po.Teacher">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Mar 26 
			12:01:24 CST 2015. -->
		insert into t_sc_teacher (id, t_sc_class_id,
		t_sc_grade_id,
		t_sc_school_id, name,
		sex, email, phone, create_time,
		password, picUrl,
		lastUpdate, education, IDCard, birthday)
		values
		(#{id,jdbcType=VARCHAR},
		#{tScClassId,jdbcType=CHAR},
		#{tScGradeId,jdbcType=CHAR}, #{tScSchoolId,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{sex,jdbcType=CHAR},
		#{email,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{password,jdbcType=VARCHAR},
		#{picUrl,jdbcType=VARCHAR},
		#{lastUpdate,jdbcType=TIMESTAMP},
		#{education,jdbcType=VARCHAR},
		#{idcard,jdbcType=VARCHAR},
		#{birthday,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.topview.school.po.Teacher">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Mar 26 
			12:01:24 CST 2015. -->
		insert into t_sc_teacher
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="tScClassId != null">
				t_sc_class_id,
			</if>
			<if test="tScGradeId != null">
				t_sc_grade_id,
			</if>
			<if test="tScSchoolId != null">
				t_sc_school_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="picUrl != null">
				picUrl,
			</if>
			<if test="lastUpdate != null">
				lastUpdate,
			</if>
			<if test="education != null">
				education,
			</if>
			<if test="idcard != null">
				IDCard,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="tScClassId != null">
				#{tScClassId,jdbcType=CHAR},
			</if>
			<if test="tScGradeId != null">
				#{tScGradeId,jdbcType=CHAR},
			</if>
			<if test="tScSchoolId != null">
				#{tScSchoolId,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=CHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="picUrl != null">
				#{picUrl,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdate != null">
				#{lastUpdate,jdbcType=TIMESTAMP},
			</if>
			<if test="education != null">
				#{education,jdbcType=VARCHAR},
			</if>
			<if test="idcard != null">
				#{idcard,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.topview.school.po.Teacher">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Mar 26 
			12:01:24 CST 2015. -->
		update t_sc_teacher
		<set>
			<if test="tScClassId != null and tScClassId != ''">
				t_sc_class_id = #{tScClassId,jdbcType=CHAR},
			</if>
			<if test="tScGradeId != null and tScGradeId != ''">
				t_sc_grade_id = #{tScGradeId,jdbcType=CHAR},
			</if>
			<if test="tScSchoolId != null and tScSchoolId != ''">
				t_sc_school_id = #{tScSchoolId,jdbcType=VARCHAR},
			</if>
			<if test="name != null and name != ''">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="sex != null and sex != ''">
				sex = #{sex,jdbcType=CHAR},
			</if>
			<if test="email != null and email != ''">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null and phone != ''">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null and createTime != ''">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="password != null and password != ''">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="picUrl != null and picUrl != ''">
				picUrl = #{picUrl,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdate != null and lastUpdate != ''">
				lastUpdate = #{lastUpdate,jdbcType=TIMESTAMP},
			</if>
			<if test="education != null and education != ''">
				education = #{education,jdbcType=VARCHAR},
			</if>
			<if test="idcard != null and idcard != ''">
				IDCard = #{idcard,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null and birthday != ''">
				birthday = #{birthday,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.topview.school.po.Teacher">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Mar 26 
			12:01:24 CST 2015. -->
		update t_sc_teacher
		set
		t_sc_class_id =
		#{tScClassId,jdbcType=CHAR},
		t_sc_grade_id =
		#{tScGradeId,jdbcType=CHAR},
		t_sc_school_id =
		#{tScSchoolId,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		sex =
		#{sex,jdbcType=CHAR},
		email = #{email,jdbcType=VARCHAR},
		phone =
		#{phone,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		password =
		#{password,jdbcType=VARCHAR},
		picUrl =
		#{picUrl,jdbcType=VARCHAR},
		lastUpdate =
		#{lastUpdate,jdbcType=TIMESTAMP},
		education =
		#{education,jdbcType=VARCHAR},
		IDCard =
		#{idcard,jdbcType=VARCHAR},
		birthday =
		#{birthday,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=VARCHAR}
	</update>

	<!-- 通过班级id查询班主任 -->
	<select id="selectHeadTeacher" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Mar 26 
			12:01:24 CST 2015. -->
		select
		<include refid="Base_Column_List" />
		from t_sc_teacher
		where t_sc_class_id = #{classId,jdbcType=VARCHAR}
	</select>




	<select id="findByMulti" resultMap="BaseResultMap">
		select * from t_sc_teacher where 1 = 1
		<if test="params != null">
			<foreach item="item" index="key" collection="params.entrySet()">
				and ${key} =
				#{item}
			</foreach>
		</if>
	</select>


	<!-- 家长通过班级id查看本班教师通讯录 -->
	<select id="selectByClazzId" parameterType="java.lang.String"
		resultMap="teacherContact">
		select
		t.id, t.name, t.t_sc_class_id, t.sex, t.phone,
		t.picUrl,
		t.lastUpdate,
		sub.name as
		subject
		from
		t_sc_teacher t,
		t_sc_curricula_variable v,
		t_sc_curricula
		cu, t_sc_subject sub
		where
		v.t_sc_teacher_id = t.id
		and
		v.t_sc_class_id =
		#{class_id}
		and
		cu.id =
		v.t_sc_curricula_id
		and
		cu.t_sc_subject_id =
		sub.id
		and
		sub.trunk = '1' <!-- 
			只显示主干学科的教师 -->
	</select>

	<!-- 根据部门id获取所有教师 -->
	<select id="selectByDepartmentId" resultMap="teacherContact"
		parameterType="java.lang.String">
		select t.id, t.name,t.t_sc_class_id,
		t.sex, t.phone,
		t.picUrl,
		t.lastUpdate
		from t_sc_teacher t, t_sc_teacher_department td
		where td.t_sc_department_id = #{departmentId,jdbcType=VARCHAR} and
		t.id = td.t_sc_teacher_id
	</select>

	<!-- 老师查看所有老师通讯录 -->
	<select id="selectAllBySchoolId" resultMap="teacherContact"
		parameterType="java.lang.String">
		select t.id, t.name,
		t.sex, t.phone,
		t.picUrl,
		t.lastUpdate
		from t_sc_teacher t
		where t.t_sc_school_id = #{schoolId}
	</select>
	<resultMap type="com.topview.school.vo.contacts.ContactsInfo"
		id="teacherContact">
		<id property="id" column="id" />
		<result property="sex" column="sex" />
		<result property="classId" column="t_sc_class_id" />
		<result property="phone" column="phone" />
		<result property="name" column="name" />
		<result property="picUrl" column="picUrl" />
		<result property="lastUpdate" column="lastUpdate" />
		<result property="subject" column="t_sc_subject.name" />
	</resultMap>

	<!-- 根据教师id查询所教的班级的名称 -->
	<select id="selectClassNameByTeacherId" resultType="java.lang.String"
		parameterType="java.lang.String">
		select DISTINCT c.name from t_sc_class c,
		t_sc_curricula_variable cv,
		t_sc_teacher t where t.id = #{teacherId}
		and t.id = cv.t_sc_teacher_id
		and cv.t_sc_class_id = c.id
	</select>

	<!-- 根据教师名称和学校id查询教师 -->
	<select id="selectByNameAndSchoolId" resultType="com.topview.school.po.Teacher"
		parameterType="com.topview.school.po.Teacher">
		select * from t_sc_teacher where name =
		#{name,jdbcType=VARCHAR} and t_sc_school_id =
		#{tScSchoolId,jdbcType=VARCHAR}
	</select>

	<!-- 根据手机号查询教师 -->
	<select id="findByPhone" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select * from t_sc_teacher where phone =
		#{phone,jdbcType=VARCHAR}
	</select>

	<!--查询级长、班主任或者某学校下的所有老师 -->
	<select id="getTeacher" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_sc_teacher
		<where>
			<if test="clazzId != null">
				t_sc_class_id = #{clazzId}
			</if>
			<if test="gradeId != null">
				t_sc_grade_id = #{gradeId}
			</if>
			<if test="schoolId != null">
				t_sc_school_id = #{schoolId} and phone != ' ' 
			</if>
					order by IDCard+0 
			<if test="offset != null">
				limit #{offset},
				#{limit}
			</if>
		</where>
	</select>
	<!-- 根据部门id查询老师 -->
	<select id="selectTeacherByDepartmentId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from t_sc_teacher t, t_sc_teacher_department td where
		td.t_sc_department_id = #{departmentId,jdbcType=VARCHAR} and
		td.t_sc_teacher_id = t.id and t.phone != ' ' 
	</select>

	<!-- 根据学校id查询教师数量 -->
	<select id="selectCount" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(*) from t_sc_teacher where t_sc_school_id =
		#{schoolId,jdbcType=VARCHAR} and phone != ' '
	</select>

	<!-- 取消已有的班主任或级长 -->
	<update id="cancelPosition" parameterType="java.util.Map">
		update t_sc_teacher
		set
		<if test="clazzId != null">
			t_sc_class_id = #{null,jdbcType=VARCHAR} where
			t_sc_class_id = #{clazzId,jdbcType=VARCHAR}
		</if>
		<if test="gradeId != null">
			t_sc_grade_id = #{null,jdbcType=CHAR} where t_sc_grade_id
			= #{gradeId,jdbcType=VARCHAR}
		</if>

	</update>

	<insert id="addPosition" parameterType="java.util.Map">
		insert into
		t_sc_teacher_position2 (t_sc_teacher_position_id,id) values
		(#{positionId},#{teacherId})
	</insert>

	<delete id="deletePosition" parameterType="java.util.Map">
		delete from t_sc_teacher_position2
		where t_sc_teacher_position_id =
		#{positionId}
		<if test="teacherId != null and teacherId != ''">
			and id = #{teacherId}
		</if>
	</delete>

	<select id="selectTeacherByPositionId" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		select t.* from t_sc_teacher t, t_sc_teacher_position2 tp where
		tp.t_sc_teacher_position_id = #{positionId} and tp.id = t.id
		<if test="offset != null and offset != ''">
			limit #{offset},#{limit}
		</if>
	</select>

	<select id="getCountByPositionId" resultType="java.lang.Integer"
		parameterType="java.lang.String">
		select count(*) from t_sc_teacher_position2 where
		t_sc_teacher_position_id = #{positionId}
	</select>

	<!-- 多条件模糊查询 -->
	<select id="findLike" resultMap="BaseResultMap">
		select * from t_sc_teacher
		<where>
			<foreach item="item" index="key" collection="params.entrySet()">
				and ${key} like "%"#{item}"%"
			</foreach>
		</where>
	</select>
	
	<select id = "getAllTeacher" resultMap="BaseResultMap">
			select * from t_sc_teacher
	</select>
	
	<select id="getTeacherBySchoolId" resultMap="BaseResultMap"
	parameterType="java.lang.String">
		select * from t_sc_teacher where t_sc_school_id = #{schoolId}
	</select>
	
	<select id="selectTeacherByschoolIdAndLikeName" resultMap="BaseResultMap"
	parameterType="java.util.Map">
		select * from t_sc_teacher where t_sc_school_id = #{schoolId} and name like "%"#{name}"%"
	</select>
	
</mapper>