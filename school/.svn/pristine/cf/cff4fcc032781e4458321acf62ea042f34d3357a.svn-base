<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.topview.school.dao.UserLoginMapper">
	<resultMap id="BaseResultMap" type="com.topview.school.po.UserLogin">
		<id column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="user_type" property="userType" jdbcType="VARCHAR" />
		<result column="lastLogin" property="lastlogin" jdbcType="TIMESTAMP" />
	</resultMap>

	<resultMap id="LoginInfoResult" type="com.topview.school.po.UserLoginInfo">
		<result column="IDCard" property="IDCard" jdbcType="VARCHAR" />
		<result column="parentName" property="parentName" jdbcType="VARCHAR" />
		<result column="studentName" property="studentName" jdbcType="VARCHAR" />
		<result column="className" property="className" jdbcType="VARCHAR" />
		<result column="lastLogin" property="lastLogin" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<sql id="Base_Column_List">
		user_id, user_type, lastLogin
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user_login
		where user_id = #{userId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from user_login
		where user_id = #{userId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.topview.school.po.UserLogin">
		insert into user_login (user_id, user_type, lastLogin
		)
		values (#{userId,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR},
		#{lastlogin,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.topview.school.po.UserLogin">
		insert into user_login
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="userType != null">
				user_type,
			</if>
			<if test="lastlogin != null">
				lastLogin,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				#{userType,jdbcType=VARCHAR},
			</if>
			<if test="lastlogin != null">
				#{lastlogin,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.topview.school.po.UserLogin">
		update user_login
		<set>
			<if test="userType != null">
				user_type = #{userType,jdbcType=VARCHAR},
			</if>
			<if test="lastlogin != null">
				lastLogin = #{lastlogin,jdbcType=TIMESTAMP},
			</if>
		</set>
		where user_id = #{userId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.topview.school.po.UserLogin">
		update user_login
		set user_type = #{userType,jdbcType=VARCHAR},
		lastLogin = #{lastlogin,jdbcType=TIMESTAMP}
		where user_id = #{userId,jdbcType=VARCHAR}
	</update>


	<select id="selectUserLoginInfo" resultMap="LoginInfoResult"
		parameterType="java.lang.String">
		select
		s.`IDCard` as IDCard,
		c.`name` as className,
		t.`name` as parentName,
		s.`name` as studentName,
		u.lastLogin as lastLogin
		from
		t_sc_parent t left JOIN
		user_login u on t.id=u.user_id,
		t_sc_student s,
		t_sc_parent_student ps,
		t_sc_class c
		where
		t.id=ps.parent_id and
		ps.student_id=s.id and
		c.id = s.t_sc_class_id 
		<if test="_parameter!= null">
			and s.t_sc_class_id=#{_parameter,jdbcType=VARCHAR}
		</if>
	</select>

	<select id="getTotalCountOfSchoolUser" resultType="java.lang.String"
		parameterType="java.lang.String">
		select count(*)
		from
		t_sc_parent t left JOIN
		user_login u on t.id=u.user_id,
		t_sc_student s,
		t_sc_parent_student ps,
		t_sc_class c,
		t_sc_grade g,
		t_sc_school sch
		where
		t.id=ps.parent_id and
		ps.student_id=s.id and
		s.t_sc_class_id=c.id and
		c.t_sc_grade_id=g.id and
		g.t_sc_school_id=sch.id
		<if test="_parameter != null">
			and sch.id=#{_parameter,jdbcType=VARCHAR}
		</if>
	</select>

	<select id="getCountOfHaveNotLoginUser" resultType="java.lang.String"
		parameterType="java.lang.String">
		select count(*)
		from
		t_sc_parent t left JOIN
		user_login u on t.id=u.user_id,
		t_sc_student s,
		t_sc_parent_student ps,
		t_sc_class c,
		t_sc_grade g,
		t_sc_school sch
		where
		t.id=ps.parent_id and
		ps.student_id=s.id and
		s.t_sc_class_id=c.id and
		c.t_sc_grade_id=g.id and
		g.t_sc_school_id=sch.id
		<if test="_parameter != null">
			and sch.id=#{_parameter,jdbcType=VARCHAR}
		</if>
		and
		u.lastLogin is null
	</select>

	<select id="getLoginCountForSchoolTeacher" resultType="java.lang.String"
		parameterType="java.lang.String">
		select count(*)
		from
		t_sc_teacher t left JOIN
		user_login u on t.id=u.user_id,
		t_sc_school sch
		where
		t.t_sc_school_id=sch.id
		<if test="_parameter != null">
			and sch.id = #{_parameter,jdbcType=VARCHAR}
		</if>
	</select>

	<select id="getNotLoginCountForSchoolTeacher" resultType="java.lang.String"
		parameterType="java.lang.String">
		select count(*)
		from
		t_sc_teacher t left JOIN
		user_login u on t.id=u.user_id,
		t_sc_school sch
		where
		t.t_sc_school_id=sch.id
		<if test="_parameter != null">
			and sch.id = #{_parameter,jdbcType=VARCHAR}
		</if>
		and
		u.lastLogin is null
	</select>

	<select id="getLoginCountOfTeacher" resultType="java.lang.String"
		parameterType="java.lang.String">
		select count(*)
		from
		t_sc_teacher t left JOIN
		user_login u on t.id=u.user_id,
		t_sc_school sch
		where
		t.t_sc_school_id=sch.id
		<if test="_parameter != null">
			and sch.id = #{_parameter,jdbcType=VARCHAR}
		</if>
		and
		u.lastLogin is not null
	</select>
	
	<select id="getLoginCountOfParent" resultType="java.lang.String"
		parameterType="java.lang.String">
		select count(*)
		from
		t_sc_parent t left JOIN
		user_login u on t.id=u.user_id,
		t_sc_student s,
		t_sc_parent_student ps,
		t_sc_class c,
		t_sc_grade g,
		t_sc_school sch
		where
		t.id=ps.parent_id and
		ps.student_id=s.id and
		s.t_sc_class_id=c.id and
		c.t_sc_grade_id=g.id and
		g.t_sc_school_id=sch.id
		<if test="_parameter != null">
			and sch.id=#{_parameter,jdbcType=VARCHAR}
		</if>
		and
		u.lastLogin is not null
	</select>
	
	<select id="getLoginMan" resultType="java.lang.String"
		parameterType="java.lang.String">
	select
		count(*)
	from
		t_sc_parent p
	left join
		user_login u
	on
		p.id=u.user_id, t_sc_student s, t_sc_parent_student ps, t_sc_class c
	where
		s.t_sc_class_id=c.id
	and
		s.id=ps.student_id
	and
		ps.parent_id=p.id
	<if test="_parameter != null">
		and c.id=#{_parameter,jdbcType=VARCHAR}
	</if>
	and
		u.lastLogin is not null
	</select>
	
	<select id="getNotLoginMan" resultType="java.lang.String"
		parameterType="java.lang.String">
	select
		count(*)
	from
		t_sc_parent p
	left join
		user_login u
	on
		p.id=u.user_id, t_sc_student s, t_sc_parent_student ps, t_sc_class c
	where
		s.t_sc_class_id=c.id
	and
		s.id=ps.student_id
	and
		ps.parent_id=p.id
	<if test="_parameter != null">
		and c.id=#{_parameter,jdbcType=VARCHAR}
	</if>
	and
		u.lastLogin is null
	</select>
	
	<select id="getAllMan" resultType="java.lang.String"
		parameterType="java.lang.String">
	select
		count(*)
	from
		t_sc_parent p
	left join
		user_login u
	on
		p.id=u.user_id, t_sc_student s, t_sc_parent_student ps, t_sc_class c
	where
		s.t_sc_class_id=c.id
	and
		s.id=ps.student_id
	and
		ps.parent_id=p.id
	<if test="_parameter != null">
		and c.id=#{_parameter,jdbcType=VARCHAR}
	</if>
	</select>
	
	<select id="getLoginStatusByUserId" resultType="java.util.Date"
		parameterType="java.lang.String">
		select lastLogin from user_login where user_id=#{_parameter,jdbcType=VARCHAR}
	</select>
</mapper>